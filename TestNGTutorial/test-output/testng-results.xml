<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="2" total="28" passed="22" failed="2" skipped="2">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-02-13T20:24:08 IST" name="Loan Department" finished-at="2023-02-13T20:24:08 IST" duration-ms="252">
    <groups>
      <group name="smoke">
        <method signature="Day2.fourthTest()[pri:0, instance:test.Day2@5403f35f]" name="fourthTest" class="test.Day2"/>
        <method signature="Day3.MobileSignupHomeLoan()[pri:0, instance:test.Day3@662b4c69]" name="MobileSignupHomeLoan" class="test.Day3"/>
        <method signature="Day2.fourthTest()[pri:0, instance:test.Day2@e15b7e8]" name="fourthTest" class="test.Day2"/>
        <method signature="Day3.MobileSignupHomeLoan()[pri:0, instance:test.Day3@1b2abca6]" name="MobileSignupHomeLoan" class="test.Day3"/>
      </group> <!-- smoke -->
    </groups>
    <test started-at="2023-02-13T20:24:08 IST" name="Personal Loan" finished-at="2023-02-13T20:24:08 IST" duration-ms="252">
      <class name="test.Day1">
        <test-method is-config="true" signature="clearCache()[pri:0, instance:test.Day1@3d5c822d]" started-at="2023-02-13T20:24:08 IST" name="clearCache" finished-at="2023-02-13T20:24:08 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clearCache -->
        <test-method signature="secondTest()[pri:0, instance:test.Day1@3d5c822d]" started-at="2023-02-13T20:24:08 IST" name="secondTest" finished-at="2023-02-13T20:24:08 IST" duration-ms="10" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- secondTest -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:test.Day1@3d5c822d]" started-at="2023-02-13T20:24:08 IST" name="afterTest" finished-at="2023-02-13T20:24:08 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- test.Day1 -->
      <class name="test.Day2">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:test.Day2@5403f35f]" started-at="2023-02-13T20:24:08 IST" name="beforeClass" finished-at="2023-02-13T20:24:08 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="fourthTest()[pri:0, instance:test.Day2@5403f35f]" started-at="2023-02-13T20:24:08 IST" name="fourthTest" finished-at="2023-02-13T20:24:08 IST" duration-ms="14" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fourthTest -->
        <test-method signature="thirdTest(java.lang.String,java.lang.String)[pri:0, instance:test.Day2@5403f35f]" started-at="2023-02-13T20:24:08 IST" name="thirdTest" finished-at="2023-02-13T20:24:08 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[qaclickacademy.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[dfhg451m]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdTest -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:test.Day2@5403f35f]" started-at="2023-02-13T20:24:08 IST" name="afterClass" finished-at="2023-02-13T20:24:08 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- test.Day2 -->
      <class name="test.Day3">
        <test-method signature="LoginAPIHomeLoan()[pri:0, instance:test.Day3@662b4c69]" started-at="2023-02-13T20:24:08 IST" name="LoginAPIHomeLoan" finished-at="2023-02-13T20:24:08 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginAPIHomeLoan -->
        <test-method signature="MobileLoginHomeLoan()[pri:0, instance:test.Day3@662b4c69]" started-at="2023-02-13T20:24:08 IST" name="MobileLoginHomeLoan" finished-at="2023-02-13T20:24:08 IST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileLoginHomeLoan -->
        <test-method signature="MobileSigninHomeLoan(java.lang.String)[pri:0, instance:test.Day3@662b4c69]" started-at="2023-02-13T20:24:08 IST" name="MobileSigninHomeLoan" finished-at="2023-02-13T20:24:08 IST" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[qaclickacademy.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileSigninHomeLoan -->
        <test-method signature="MobileSignupHomeLoan()[pri:0, instance:test.Day3@662b4c69]" started-at="2023-02-13T20:24:08 IST" name="MobileSignupHomeLoan" finished-at="2023-02-13T20:24:08 IST" duration-ms="16" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileSignupHomeLoan -->
        <test-method signature="webLoginHomeLoan()[pri:0, instance:test.Day3@662b4c69]" started-at="2023-02-13T20:24:08 IST" name="webLoginHomeLoan" finished-at="2023-02-13T20:24:08 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- webLoginHomeLoan -->
      </class> <!-- test.Day3 -->
      <class name="test.Day4">
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:test.Day4@2a54a73f]" started-at="2023-02-13T20:24:08 IST" name="beforeMethod" finished-at="2023-02-13T20:24:08 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MobileLoginCarLoan(java.lang.String,java.lang.String)[pri:0, instance:test.Day4@2a54a73f]" started-at="2023-02-13T20:24:08 IST" name="MobileLoginCarLoan" data-provider="getData" finished-at="2023-02-13T20:24:08 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Abhay]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[FGHGVJHKB]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileLoginCarLoan -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:test.Day4@2a54a73f]" started-at="2023-02-13T20:24:08 IST" name="afterMethod" finished-at="2023-02-13T20:24:08 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:test.Day4@2a54a73f]" started-at="2023-02-13T20:24:08 IST" name="beforeMethod" finished-at="2023-02-13T20:24:08 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MobileLoginCarLoan(java.lang.String,java.lang.String)[pri:0, instance:test.Day4@2a54a73f]" started-at="2023-02-13T20:24:08 IST" name="MobileLoginCarLoan" data-provider="getData" finished-at="2023-02-13T20:24:08 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[RAM]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[fghgjh]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileLoginCarLoan -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:test.Day4@2a54a73f]" started-at="2023-02-13T20:24:08 IST" name="afterMethod" finished-at="2023-02-13T20:24:08 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:test.Day4@2a54a73f]" started-at="2023-02-13T20:24:08 IST" name="beforeMethod" finished-at="2023-02-13T20:24:08 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MobileLoginCarLoan(java.lang.String,java.lang.String)[pri:0, instance:test.Day4@2a54a73f]" started-at="2023-02-13T20:24:08 IST" name="MobileLoginCarLoan" data-provider="getData" finished-at="2023-02-13T20:24:08 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Shyam]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[dfgh]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileLoginCarLoan -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:test.Day4@2a54a73f]" started-at="2023-02-13T20:24:08 IST" name="afterMethod" finished-at="2023-02-13T20:24:08 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:test.Day4@2a54a73f]" started-at="2023-02-13T20:24:08 IST" name="beforeMethod" finished-at="2023-02-13T20:24:08 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="webLoginCarLoan()[pri:0, instance:test.Day4@2a54a73f]" started-at="2023-02-13T20:24:08 IST" name="webLoginCarLoan" finished-at="2023-02-13T20:24:08 IST" duration-ms="6" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at test.Day4.webLoginCarLoan(Day4.java:17)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- webLoginCarLoan -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:test.Day4@2a54a73f]" started-at="2023-02-13T20:24:08 IST" name="afterMethod" finished-at="2023-02-13T20:24:08 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="LoginAPICarLoan()[pri:0, instance:test.Day4@2a54a73f]" started-at="2023-02-13T20:24:08 IST" name="LoginAPICarLoan" finished-at="2023-02-13T20:24:08 IST" depends-on-methods="test.Day4.webLoginCarLoan, test.Day4.MobileLoginCarLoan" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method Day4.LoginAPICarLoan()[pri:0, instance:test.Day4@2a54a73f] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method Day4.LoginAPICarLoan()[pri:0, instance:test.Day4@2a54a73f] depends on not successfully finished methods
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:102)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginAPICarLoan -->
      </class> <!-- test.Day4 -->
    </test> <!-- Personal Loan -->
    <test started-at="2023-02-13T20:24:08 IST" name="sample" finished-at="2023-02-13T20:24:08 IST" duration-ms="236">
      <class name="test.Day1">
        <test-method is-config="true" signature="clearCache()[pri:0, instance:test.Day1@209da20d]" started-at="2023-02-13T20:24:08 IST" name="clearCache" finished-at="2023-02-13T20:24:08 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clearCache -->
        <test-method signature="secondTest()[pri:0, instance:test.Day1@209da20d]" started-at="2023-02-13T20:24:08 IST" name="secondTest" finished-at="2023-02-13T20:24:08 IST" duration-ms="10" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- secondTest -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:test.Day1@209da20d]" started-at="2023-02-13T20:24:08 IST" name="afterTest" finished-at="2023-02-13T20:24:08 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- test.Day1 -->
      <class name="test.Day2">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:test.Day2@e15b7e8]" started-at="2023-02-13T20:24:08 IST" name="beforeClass" finished-at="2023-02-13T20:24:08 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="fourthTest()[pri:0, instance:test.Day2@e15b7e8]" started-at="2023-02-13T20:24:08 IST" name="fourthTest" finished-at="2023-02-13T20:24:08 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fourthTest -->
        <test-method signature="thirdTest(java.lang.String,java.lang.String)[pri:0, instance:test.Day2@e15b7e8]" started-at="2023-02-13T20:24:08 IST" name="thirdTest" finished-at="2023-02-13T20:24:08 IST" duration-ms="8" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[rahulshettyacademy.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[dfhg451m]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdTest -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:test.Day2@e15b7e8]" started-at="2023-02-13T20:24:08 IST" name="afterClass" finished-at="2023-02-13T20:24:08 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- test.Day2 -->
      <class name="test.Day3">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:test.Day3@1b2abca6]" started-at="2023-02-13T20:24:08 IST" name="beforeSuite" finished-at="2023-02-13T20:24:08 IST" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method signature="LoginAPIHomeLoan()[pri:0, instance:test.Day3@1b2abca6]" started-at="2023-02-13T20:24:08 IST" name="LoginAPIHomeLoan" finished-at="2023-02-13T20:24:08 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginAPIHomeLoan -->
        <test-method signature="MobileLoginHomeLoan()[pri:0, instance:test.Day3@1b2abca6]" started-at="2023-02-13T20:24:08 IST" name="MobileLoginHomeLoan" finished-at="2023-02-13T20:24:08 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileLoginHomeLoan -->
        <test-method signature="MobileSigninHomeLoan(java.lang.String)[pri:0, instance:test.Day3@1b2abca6]" started-at="2023-02-13T20:24:08 IST" name="MobileSigninHomeLoan" finished-at="2023-02-13T20:24:08 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[rahulshettyacademy.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileSigninHomeLoan -->
        <test-method signature="MobileSignupHomeLoan()[pri:0, instance:test.Day3@1b2abca6]" started-at="2023-02-13T20:24:08 IST" name="MobileSignupHomeLoan" finished-at="2023-02-13T20:24:08 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileSignupHomeLoan -->
        <test-method signature="webLoginHomeLoan()[pri:0, instance:test.Day3@1b2abca6]" started-at="2023-02-13T20:24:08 IST" name="webLoginHomeLoan" finished-at="2023-02-13T20:24:08 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- webLoginHomeLoan -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:test.Day3@1b2abca6]" started-at="2023-02-13T20:24:08 IST" name="afterSuite" finished-at="2023-02-13T20:24:08 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- test.Day3 -->
      <class name="test.Day4">
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:test.Day4@6392827e]" started-at="2023-02-13T20:24:08 IST" name="beforeMethod" finished-at="2023-02-13T20:24:08 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MobileLoginCarLoan(java.lang.String,java.lang.String)[pri:0, instance:test.Day4@6392827e]" started-at="2023-02-13T20:24:08 IST" name="MobileLoginCarLoan" data-provider="getData" finished-at="2023-02-13T20:24:08 IST" duration-ms="8" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Abhay]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[FGHGVJHKB]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileLoginCarLoan -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:test.Day4@6392827e]" started-at="2023-02-13T20:24:08 IST" name="afterMethod" finished-at="2023-02-13T20:24:08 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="MobileLoginCarLoan(java.lang.String,java.lang.String)[pri:0, instance:test.Day4@6392827e]" started-at="2023-02-13T20:24:08 IST" name="MobileLoginCarLoan" data-provider="getData" finished-at="2023-02-13T20:24:08 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[RAM]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[fghgjh]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileLoginCarLoan -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:test.Day4@6392827e]" started-at="2023-02-13T20:24:08 IST" name="beforeMethod" finished-at="2023-02-13T20:24:08 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:test.Day4@6392827e]" started-at="2023-02-13T20:24:08 IST" name="afterMethod" finished-at="2023-02-13T20:24:08 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:test.Day4@6392827e]" started-at="2023-02-13T20:24:08 IST" name="beforeMethod" finished-at="2023-02-13T20:24:08 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MobileLoginCarLoan(java.lang.String,java.lang.String)[pri:0, instance:test.Day4@6392827e]" started-at="2023-02-13T20:24:08 IST" name="MobileLoginCarLoan" data-provider="getData" finished-at="2023-02-13T20:24:08 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Shyam]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[dfgh]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileLoginCarLoan -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:test.Day4@6392827e]" started-at="2023-02-13T20:24:08 IST" name="afterMethod" finished-at="2023-02-13T20:24:08 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:test.Day4@6392827e]" started-at="2023-02-13T20:24:08 IST" name="beforeMethod" finished-at="2023-02-13T20:24:08 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="webLoginCarLoan()[pri:0, instance:test.Day4@6392827e]" started-at="2023-02-13T20:24:08 IST" name="webLoginCarLoan" finished-at="2023-02-13T20:24:08 IST" duration-ms="4" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at test.Day4.webLoginCarLoan(Day4.java:17)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- webLoginCarLoan -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:test.Day4@6392827e]" started-at="2023-02-13T20:24:08 IST" name="afterMethod" finished-at="2023-02-13T20:24:08 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="LoginAPICarLoan()[pri:0, instance:test.Day4@6392827e]" started-at="2023-02-13T20:24:08 IST" name="LoginAPICarLoan" finished-at="2023-02-13T20:24:08 IST" depends-on-methods="test.Day4.webLoginCarLoan, test.Day4.MobileLoginCarLoan" duration-ms="1" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method Day4.LoginAPICarLoan()[pri:0, instance:test.Day4@6392827e] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method Day4.LoginAPICarLoan()[pri:0, instance:test.Day4@6392827e] depends on not successfully finished methods
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:102)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginAPICarLoan -->
      </class> <!-- test.Day4 -->
    </test> <!-- sample -->
  </suite> <!-- Loan Department -->
</testng-results>
